package com.example.malwaresimulator;

import androidx.appcompat.app.AppCompatActivity;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.os.Environment;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        for (int i = 0; i < 100; i++) {
            editImage(i);
        }
    }

    private void editImage(int index) {
        File directory = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);
        String fileName = "ImageNr_" + index + ".png";
        File imageFile = new File(directory, fileName);

        try {
            byte[] fileContent = readFromFile(imageFile);
            Bitmap bitmap = BitmapFactory.decodeByteArray(fileContent, 0, fileContent.length);
            Bitmap mutableBitmap = bitmap.copy(bitmap.getConfig(), true);
            mutableBitmap.setPixel(0, 0, 0xFFFF0000); // ARGB value for blue

            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            mutableBitmap.compress(Bitmap.CompressFormat.PNG, 100, bos);
            byte[] bitmapdata = bos.toByteArray();
            writeToFile(imageFile, bitmapdata);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private byte[] readFromFile(File file) throws IOException {
        byte[] bytes;
        try (InputStream is = new FileInputStream(file)) {
            long length = file.length();
            bytes = new byte[(int)length];
            int offset = 0;
            int numRead;
            while (offset < bytes.length && (numRead = is.read(bytes, offset, bytes.length - offset)) >= 0) {
                offset += numRead;
            }
            if (offset < bytes.length) {
                throw new IOException("Error reading file " + file.getName());
            }
        }
        return bytes;
    }

    private void writeToFile(File file, byte[] bytes) throws IOException {
        try (FileOutputStream fos = new FileOutputStream(file)) {
            fos.write(bytes);
        }
    }



}